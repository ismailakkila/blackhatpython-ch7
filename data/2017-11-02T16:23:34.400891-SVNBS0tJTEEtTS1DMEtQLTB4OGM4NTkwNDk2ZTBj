****************************************************************************************************
[*] Running On: ISAKKILA-M-C0KP-0x8c8590496e0c
[*] Time: 2017-11-02T16:23:34.401488
[*] Using Specific Modules
[*] Successful Modules Import From: config/SVNBS0tJTEEtTS1DMEtQLTB4OGM4NTkwNDk2ZTBj.json
[*] In dirlister module:

['.DS_Store', '000webhost.txt', 'all.txt', 'blackhatpython-ch7', 'cb-live.json', 'ch2_bhpnet.py', 'ch2_netcat_example.py', 'ch2_rforward.py', 'ch2_rforward_server.py', 'ch2_simple_tcp_server.py', 'ch2_ssh_client.py', 'ch2_ssh_server.key', 'ch2_ssh_server.py', 'ch2_tcpproxy_example.py', 'ch2_tcpservertools_example.py', 'ch4_arp_poison.py', 'ch5_html_form_brute_force.py', 'ch5_http_brute_forcer.py', 'ch6_burp_send_to_bing.py', 'ch6_burp_wordlist.py', 'external_edge-live.json', 'host.key', 'internal_edge-live.json', 'jython-standalone-2.7.0.jar', 'output.txt', 'passwd.txt', 'scapy_parser.py', 'some_file', 'test', 'test.pcap', 'test.py', 'test1.py', 'test_folder', 'text_pcap.pcap', 'urls.txt', 'urls_from_pcap.txt', 'urls_sniff.txt']


[*] In environ module:

environ({'TERM_PROGRAM': 'Apple_Terminal', 'SHELL': '/bin/bash', 'TERM': 'xterm-256color', 'TMPDIR': '/var/folders/xl/7bn03w590cs7r70735ng7x6w0000gn/T/', 'Apple_PubSub_Socket_Render': '/private/tmp/com.apple.launchd.1EY8hXmQfG/Render', 'TERM_PROGRAM_VERSION': '388.1.1', 'OLDPWD': '/Users/isakkila/Documents/blackhatpython/blackhatpython-ch7', 'TERM_SESSION_ID': '6725EFCC-10FB-4E58-8C8B-F023F7DDCFE5', 'USER': 'isakkila', 'SSH_AUTH_SOCK': '/private/tmp/com.apple.launchd.5f3TvFJM1V/Listeners', '__CF_USER_TEXT_ENCODING': '0x1F5:0x0:0x0', 'PATH': '/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/usr/local/bin/jamf:/Applications/Wireshark.app/Contents/MacOS', 'PWD': '/Users/isakkila/Documents/blackhatpython', 'XPC_FLAGS': '0x0', 'XPC_SERVICE_NAME': '0', 'SHLVL': '1', 'HOME': '/Users/isakkila', 'LOGNAME': 'isakkila', 'LC_CTYPE': 'UTF-8', 'DISPLAY': '/private/tmp/com.apple.launchd.LDvTIFlJfP/org.macosforge.xquartz:0', '_': '/Library/Frameworks/Python.framework/Versions/3.6/bin/python3', '__PYVENV_LAUNCHER__': '/Library/Frameworks/Python.framework/Versions/3.6/bin/python3'})


[*] Finished Executing Modules
[*] Sleeping For 10 Seconds
****************************************************************************************************
[*] Running On: ISAKKILA-M-C0KP-0x8c8590496e0c
[*] Time: 2017-11-02T16:24:14.884963
[*] Using Specific Modules
[*] Successful Modules Import From: config/SVNBS0tJTEEtTS1DMEtQLTB4OGM4NTkwNDk2ZTBj.json
[*] In dirlister module:

['.DS_Store', '000webhost.txt', 'all.txt', 'blackhatpython-ch7', 'cb-live.json', 'ch2_bhpnet.py', 'ch2_netcat_example.py', 'ch2_rforward.py', 'ch2_rforward_server.py', 'ch2_simple_tcp_server.py', 'ch2_ssh_client.py', 'ch2_ssh_server.key', 'ch2_ssh_server.py', 'ch2_tcpproxy_example.py', 'ch2_tcpservertools_example.py', 'ch4_arp_poison.py', 'ch5_html_form_brute_force.py', 'ch5_http_brute_forcer.py', 'ch6_burp_send_to_bing.py', 'ch6_burp_wordlist.py', 'external_edge-live.json', 'host.key', 'internal_edge-live.json', 'jython-standalone-2.7.0.jar', 'output.txt', 'passwd.txt', 'scapy_parser.py', 'some_file', 'test', 'test.pcap', 'test.py', 'test1.py', 'test_folder', 'text_pcap.pcap', 'urls.txt', 'urls_from_pcap.txt', 'urls_sniff.txt']


[*] In environ module:

environ({'TERM_PROGRAM': 'Apple_Terminal', 'SHELL': '/bin/bash', 'TERM': 'xterm-256color', 'TMPDIR': '/var/folders/xl/7bn03w590cs7r70735ng7x6w0000gn/T/', 'Apple_PubSub_Socket_Render': '/private/tmp/com.apple.launchd.1EY8hXmQfG/Render', 'TERM_PROGRAM_VERSION': '388.1.1', 'OLDPWD': '/Users/isakkila/Documents/blackhatpython/blackhatpython-ch7', 'TERM_SESSION_ID': '6725EFCC-10FB-4E58-8C8B-F023F7DDCFE5', 'USER': 'isakkila', 'SSH_AUTH_SOCK': '/private/tmp/com.apple.launchd.5f3TvFJM1V/Listeners', '__CF_USER_TEXT_ENCODING': '0x1F5:0x0:0x0', 'PATH': '/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/usr/local/bin/jamf:/Applications/Wireshark.app/Contents/MacOS', 'PWD': '/Users/isakkila/Documents/blackhatpython', 'XPC_FLAGS': '0x0', 'XPC_SERVICE_NAME': '0', 'SHLVL': '1', 'HOME': '/Users/isakkila', 'LOGNAME': 'isakkila', 'LC_CTYPE': 'UTF-8', 'DISPLAY': '/private/tmp/com.apple.launchd.LDvTIFlJfP/org.macosforge.xquartz:0', '_': '/Library/Frameworks/Python.framework/Versions/3.6/bin/python3', '__PYVENV_LAUNCHER__': '/Library/Frameworks/Python.framework/Versions/3.6/bin/python3'})


[*] Finished Executing Modules
[*] Sleeping For 10 Seconds
****************************************************************************************************
[*] Running On: ISAKKILA-M-C0KP-0x8c8590496e0c
[*] Time: 2017-11-02T16:24:39.382059
[*] Using Specific Modules
[*] Successful Modules Import From: config/SVNBS0tJTEEtTS1DMEtQLTB4OGM4NTkwNDk2ZTBj.json
[*] In dirlister module:

['.DS_Store', '000webhost.txt', 'all.txt', 'blackhatpython-ch7', 'cb-live.json', 'ch2_bhpnet.py', 'ch2_netcat_example.py', 'ch2_rforward.py', 'ch2_rforward_server.py', 'ch2_simple_tcp_server.py', 'ch2_ssh_client.py', 'ch2_ssh_server.key', 'ch2_ssh_server.py', 'ch2_tcpproxy_example.py', 'ch2_tcpservertools_example.py', 'ch4_arp_poison.py', 'ch5_html_form_brute_force.py', 'ch5_http_brute_forcer.py', 'ch6_burp_send_to_bing.py', 'ch6_burp_wordlist.py', 'external_edge-live.json', 'host.key', 'internal_edge-live.json', 'jython-standalone-2.7.0.jar', 'output.txt', 'passwd.txt', 'scapy_parser.py', 'some_file', 'test', 'test.pcap', 'test.py', 'test1.py', 'test_folder', 'text_pcap.pcap', 'urls.txt', 'urls_from_pcap.txt', 'urls_sniff.txt']


[*] In environ module:

environ({'TERM_PROGRAM': 'Apple_Terminal', 'SHELL': '/bin/bash', 'TERM': 'xterm-256color', 'TMPDIR': '/var/folders/xl/7bn03w590cs7r70735ng7x6w0000gn/T/', 'Apple_PubSub_Socket_Render': '/private/tmp/com.apple.launchd.1EY8hXmQfG/Render', 'TERM_PROGRAM_VERSION': '388.1.1', 'OLDPWD': '/Users/isakkila/Documents/blackhatpython/blackhatpython-ch7', 'TERM_SESSION_ID': '6725EFCC-10FB-4E58-8C8B-F023F7DDCFE5', 'USER': 'isakkila', 'SSH_AUTH_SOCK': '/private/tmp/com.apple.launchd.5f3TvFJM1V/Listeners', '__CF_USER_TEXT_ENCODING': '0x1F5:0x0:0x0', 'PATH': '/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/usr/local/bin/jamf:/Applications/Wireshark.app/Contents/MacOS', 'PWD': '/Users/isakkila/Documents/blackhatpython', 'XPC_FLAGS': '0x0', 'XPC_SERVICE_NAME': '0', 'SHLVL': '1', 'HOME': '/Users/isakkila', 'LOGNAME': 'isakkila', 'LC_CTYPE': 'UTF-8', 'DISPLAY': '/private/tmp/com.apple.launchd.LDvTIFlJfP/org.macosforge.xquartz:0', '_': '/Library/Frameworks/Python.framework/Versions/3.6/bin/python3', '__PYVENV_LAUNCHER__': '/Library/Frameworks/Python.framework/Versions/3.6/bin/python3'})


[*] Finished Executing Modules
[*] Sleeping For 10 Seconds
****************************************************************************************************
[*] Running On: ISAKKILA-M-C0KP-0x8c8590496e0c
[*] Time: 2017-11-02T16:25:09.381967
[*] Using Specific Modules
[*] Successful Modules Import From: config/SVNBS0tJTEEtTS1DMEtQLTB4OGM4NTkwNDk2ZTBj.json
[*] In dirlister module:

['.DS_Store', '000webhost.txt', 'all.txt', 'blackhatpython-ch7', 'cb-live.json', 'ch2_bhpnet.py', 'ch2_netcat_example.py', 'ch2_rforward.py', 'ch2_rforward_server.py', 'ch2_simple_tcp_server.py', 'ch2_ssh_client.py', 'ch2_ssh_server.key', 'ch2_ssh_server.py', 'ch2_tcpproxy_example.py', 'ch2_tcpservertools_example.py', 'ch4_arp_poison.py', 'ch5_html_form_brute_force.py', 'ch5_http_brute_forcer.py', 'ch6_burp_send_to_bing.py', 'ch6_burp_wordlist.py', 'external_edge-live.json', 'host.key', 'internal_edge-live.json', 'jython-standalone-2.7.0.jar', 'output.txt', 'passwd.txt', 'scapy_parser.py', 'some_file', 'test', 'test.pcap', 'test.py', 'test1.py', 'test_folder', 'text_pcap.pcap', 'urls.txt', 'urls_from_pcap.txt', 'urls_sniff.txt']


[*] In environ module:

environ({'TERM_PROGRAM': 'Apple_Terminal', 'SHELL': '/bin/bash', 'TERM': 'xterm-256color', 'TMPDIR': '/var/folders/xl/7bn03w590cs7r70735ng7x6w0000gn/T/', 'Apple_PubSub_Socket_Render': '/private/tmp/com.apple.launchd.1EY8hXmQfG/Render', 'TERM_PROGRAM_VERSION': '388.1.1', 'OLDPWD': '/Users/isakkila/Documents/blackhatpython/blackhatpython-ch7', 'TERM_SESSION_ID': '6725EFCC-10FB-4E58-8C8B-F023F7DDCFE5', 'USER': 'isakkila', 'SSH_AUTH_SOCK': '/private/tmp/com.apple.launchd.5f3TvFJM1V/Listeners', '__CF_USER_TEXT_ENCODING': '0x1F5:0x0:0x0', 'PATH': '/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/usr/local/bin/jamf:/Applications/Wireshark.app/Contents/MacOS', 'PWD': '/Users/isakkila/Documents/blackhatpython', 'XPC_FLAGS': '0x0', 'XPC_SERVICE_NAME': '0', 'SHLVL': '1', 'HOME': '/Users/isakkila', 'LOGNAME': 'isakkila', 'LC_CTYPE': 'UTF-8', 'DISPLAY': '/private/tmp/com.apple.launchd.LDvTIFlJfP/org.macosforge.xquartz:0', '_': '/Library/Frameworks/Python.framework/Versions/3.6/bin/python3', '__PYVENV_LAUNCHER__': '/Library/Frameworks/Python.framework/Versions/3.6/bin/python3'})


[*] Finished Executing Modules
